<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    
    
     <context:annotation-config />
    
     <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:sys-config.properties" />
	</bean>
    
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url"
			value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--		 连接池启动时的初始值 -->
<!-- 		<property name="initialSize" value="1" /> -->
		<!--		 连接池的最大值 -->
<!-- 		<property name="maxActive" value="500" /> -->
		<!--		 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
<!-- 		<property name="maxIdle" value="2" /> -->
		<!--		  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
<!-- 		<property name="minIdle" value="1" /> -->
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>com/sys/model/model.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=false
				hibernate.cache.use_second_level_cache=false
				hibernate.cache.use_query_cache=false
			</value>
		</property>
	</bean>
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 注册Action -->
	<bean id="loginAction" class="com.sys.action.LoginAction" scope="prototype" />
	<bean id="userAction" class="com.sys.action.UserAction" scope="prototype" />
	<bean id="groupAction" class="com.sys.action.GroupAction" scope="prototype" />
	<bean id="contactorAction" class="com.sys.action.ContactorAction" scope="prototype" />
	<bean id="shortMsgAction" class="com.sys.action.ShortMsgAction" scope="prototype" />

	<!-- 注册 Interface-->
	<bean id="IUserService" class="com.sys.service.Impl.UserService" />
	<bean id="IGroupService" class="com.sys.service.Impl.GroupService" />
	<bean id="IContactorService" class="com.sys.service.Impl.ContactorService" />
	<bean id="IShortMsgService" class="com.sys.service.Impl.ShortMsgService" />
	
	<!-- DAO层 Interface-->
	<bean id="ContactorDAO" class="com.sys.dao.Impl.ContactorDaoImpl" />
	<bean id="GroupDAO" class="com.sys.dao.Impl.GroupDaoImpl" />
	<bean id="UserDao" class="com.sys.dao.Impl.UserDaoImpl" />
	<bean id="ShortMsgDao" class="com.sys.dao.Impl.ShortMsgDaoImpl" />
	
</beans>
